input: "tag: user.rust\n-\ntag(): user.code_comment_line\ntag(): user.code_comment_block_c_like\n\
  tag(): user.code_comment_documentation\n\ntag(): user.code_imperative\ntag(): user.code_object_oriented\n\
  \ntag(): user.code_data_bool\ntag(): user.code_data_null\n\ntag(): user.code_functions\n\
  tag(): user.code_functions_common\ntag(): user.code_libraries\ntag(): user.code_libraries_gui\n\
  \ntag(): user.code_operators_array\ntag(): user.code_operators_assignment\ntag():\
  \ user.code_operators_bitwise\ntag(): user.code_operators_math\n\nsettings():\n\
  \    user.code_private_function_formatter = \"SNAKE_CASE\"\n    user.code_protected_function_formatter\
  \ = \"SNAKE_CASE\"\n    user.code_public_function_formatter = \"SNAKE_CASE\"\n \
  \   user.code_private_variable_formatter = \"SNAKE_CASE\"\n    user.code_protected_variable_formatter\
  \ = \"SNAKE_CASE\"\n    user.code_public_variable_formatter = \"SNAKE_CASE\"\n\n\
  # rust-specific grammars\n\n## for unsafe rust\nstate unsafe: \"unsafe \"\nunsafe\
  \ block: user.code_state_unsafe()\n\n## rust centric struct and enum definitions\n\
  state (struct | structure) <user.text>:\n    insert(\"struct \")\n    insert(user.formatted_text(text,\
  \ \"PUBLIC_CAMEL_CASE\"))\n\nstate enum <user.text>:\n    insert(\"enum \")\n  \
  \  insert(user.formatted_text(text, \"PUBLIC_CAMEL_CASE\"))\n\ntoggle use: user.code_toggle_libraries()\n\
  \n## Simple aliases\nborrow: \"&\"\nborrow mutable: \"&mut \"\nstate (pub | public):\
  \ \"pub \"\nstate (pub | public) crate: \"pub(crate) \"\nstate (dyn | dynamic):\
  \ \"dyn \"\nstate constant: \"const \"\nstate (funk | func | function): \"fn \"\n\
  state (imp | implements): \"impl \"\nstate let mute: \"let mut \"\nstate let: \"\
  let \"\nstate (mute | mutable): \"mut \"\nstate (mod | module): \"mod \"\nstate\
  \ ref (mute | mutable): \"ref mut \"\nstate ref: \"ref \"\nstate trait: \"trait\
  \ \"\nstate match: user.code_state_switch()\nstate (some | sum): \"Some\"\nstate\
  \ static: \"static \"\nself taught: \"self.\"\nstate use: user.code_import()\n\n\
  use <user.code_libraries>:\n    user.code_insert_library(code_libraries, \"\")\n\
  \    key(semicolon enter)\n\n## specialist flow control\nstate if let some: user.code_insert_if_let_some()\n\
  state if let error: user.code_insert_if_let_error()\n\n## rust centric synonyms\n\
  is some: user.code_insert_is_not_null()\n\n## for implementing\nimplement (struct\
  \ | structure): user.code_state_implements()\n\n## for annotating function parameters\n\
  is implemented trait {user.code_trait}: user.code_insert_trait_annotation(code_trait)\n\
  is implemented trait: \": impl \"\nreturns implemented trait {user.code_trait}:\
  \ user.code_insert_return_trait(code_trait)\nreturns implemented trait: \" -> impl\
  \ \"\n\n## for generic reference of traits\ntrait {user.code_trait}: insert(\"{code_trait}\"\
  )\nimplemented trait {user.code_trait}: insert(\"impl {code_trait}\")\ndynamic trait\
  \ {user.code_trait}: insert(\"dyn {code_trait}\")\n\n## for generic reference of\
  \ macro\nmacro {user.code_macros}:\n    user.code_insert_macro(code_macros, \"\"\
  )\nmacro wrap {user.code_macros}:\n    user.code_insert_macro(code_macros, edit.selected_text())\n\
  \n## rust specific document comments\nblock dock comment: user.code_comment_documentation_block()\n\
  inner dock comment: user.code_comment_documentation_inner()\ninner block dock comment:\
  \ user.code_comment_documentation_block_inner()\n"
output:
  type: source_file
  children:
  - type: context
    children:
    - type: match
      key:
        text: tag
        type: identifier
      pattern:
        text: ' user.rust'
        type: implicit_string
  - type: include_tag
    tag:
      text: user.code_comment_line
      type: identifier
  - type: include_tag
    tag:
      text: user.code_comment_block_c_like
      type: identifier
  - type: include_tag
    tag:
      text: user.code_comment_documentation
      type: identifier
  - type: include_tag
    tag:
      text: user.code_imperative
      type: identifier
  - type: include_tag
    tag:
      text: user.code_object_oriented
      type: identifier
  - type: include_tag
    tag:
      text: user.code_data_bool
      type: identifier
  - type: include_tag
    tag:
      text: user.code_data_null
      type: identifier
  - type: include_tag
    tag:
      text: user.code_functions
      type: identifier
  - type: include_tag
    tag:
      text: user.code_functions_common
      type: identifier
  - type: include_tag
    tag:
      text: user.code_libraries
      type: identifier
  - type: include_tag
    tag:
      text: user.code_libraries_gui
      type: identifier
  - type: include_tag
    tag:
      text: user.code_operators_array
      type: identifier
  - type: include_tag
    tag:
      text: user.code_operators_assignment
      type: identifier
  - type: include_tag
    tag:
      text: user.code_operators_bitwise
      type: identifier
  - type: include_tag
    tag:
      text: user.code_operators_math
      type: identifier
  - type: settings
    children:
    - type: block
      children:
      - type: assignment
        left:
          text: user.code_private_function_formatter
          type: identifier
        right:
          type: string
          children:
          - text: SNAKE_CASE
            type: string_content
      - type: assignment
        left:
          text: user.code_protected_function_formatter
          type: identifier
        right:
          type: string
          children:
          - text: SNAKE_CASE
            type: string_content
      - type: assignment
        left:
          text: user.code_public_function_formatter
          type: identifier
        right:
          type: string
          children:
          - text: SNAKE_CASE
            type: string_content
      - type: assignment
        left:
          text: user.code_private_variable_formatter
          type: identifier
        right:
          type: string
          children:
          - text: SNAKE_CASE
            type: string_content
      - type: assignment
        left:
          text: user.code_protected_variable_formatter
          type: identifier
        right:
          type: string
          children:
          - text: SNAKE_CASE
            type: string_content
      - type: assignment
        left:
          text: user.code_public_variable_formatter
          type: identifier
        right:
          type: string
          children:
          - text: SNAKE_CASE
            type: string_content
  - text: '# rust-specific grammars'
    type: comment
  - text: '## for unsafe rust'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - text: unsafe
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'unsafe '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: unsafe
          type: word
        - text: block
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_state_unsafe
            type: identifier
          arguments:
            type: argument_list
            children: []
  - text: '## rust centric struct and enum definitions'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - type: parenthesized_rule
          children:
          - type: choice
            children:
            - text: struct
              type: word
            - text: structure
              type: word
        - type: capture
          capture_name:
            text: user.text
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: 'struct '
                type: string_content
      - type: expression
        expression:
          type: action
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: action
              action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                type: argument_list
                children:
                - type: variable
                  variable_name:
                    text: text
                    type: identifier
                - type: string
                  children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - text: enum
          type: word
        - type: capture
          capture_name:
            text: user.text
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: 'enum '
                type: string_content
      - type: expression
        expression:
          type: action
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: action
              action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                type: argument_list
                children:
                - type: variable
                  variable_name:
                    text: text
                    type: identifier
                - type: string
                  children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: toggle
          type: word
        - text: use
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_toggle_libraries
            type: identifier
          arguments:
            type: argument_list
            children: []
  - text: '## Simple aliases'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - text: borrow
        type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: '&'
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: borrow
          type: word
        - text: mutable
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: '&mut '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - type: parenthesized_rule
          children:
          - type: choice
            children:
            - text: pub
              type: word
            - text: public
              type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'pub '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - type: parenthesized_rule
          children:
          - type: choice
            children:
            - text: pub
              type: word
            - text: public
              type: word
        - text: crate
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'pub(crate) '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - type: parenthesized_rule
          children:
          - type: choice
            children:
            - text: dyn
              type: word
            - text: dynamic
              type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'dyn '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - text: constant
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'const '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - type: parenthesized_rule
          children:
          - type: choice
            children:
            - text: funk
              type: word
            - text: func
              type: word
            - text: function
              type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'fn '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - type: parenthesized_rule
          children:
          - type: choice
            children:
            - text: imp
              type: word
            - text: implements
              type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'impl '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - text: let
          type: word
        - text: mute
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'let mut '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - text: let
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'let '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - type: parenthesized_rule
          children:
          - type: choice
            children:
            - text: mute
              type: word
            - text: mutable
              type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'mut '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - type: parenthesized_rule
          children:
          - type: choice
            children:
            - text: mod
              type: word
            - text: module
              type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'mod '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - text: ref
          type: word
        - type: parenthesized_rule
          children:
          - type: choice
            children:
            - text: mute
              type: word
            - text: mutable
              type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'ref mut '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - text: ref
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'ref '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - text: trait
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'trait '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - text: match
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_state_switch
            type: identifier
          arguments:
            type: argument_list
            children: []
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - type: parenthesized_rule
          children:
          - type: choice
            children:
            - text: some
              type: word
            - text: sum
              type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: Some
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - text: static
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'static '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: self
          type: word
        - text: taught
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: self.
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - text: use
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_import
            type: identifier
          arguments:
            type: argument_list
            children: []
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: use
          type: word
        - type: capture
          capture_name:
            text: user.code_libraries
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_insert_library
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: variable
              variable_name:
                text: code_libraries
                type: identifier
            - type: string
              children: []
      - type: expression
        expression:
          type: key_action
          arguments:
            text: semicolon enter
            type: implicit_string
  - text: '## specialist flow control'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - text: if
          type: word
        - text: let
          type: word
        - text: some
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_insert_if_let_some
            type: identifier
          arguments:
            type: argument_list
            children: []
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - text: if
          type: word
        - text: let
          type: word
        - text: error
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_insert_if_let_error
            type: identifier
          arguments:
            type: argument_list
            children: []
  - text: '## rust centric synonyms'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: is
          type: word
        - text: some
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_insert_is_not_null
            type: identifier
          arguments:
            type: argument_list
            children: []
  - text: '## for implementing'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: implement
          type: word
        - type: parenthesized_rule
          children:
          - type: choice
            children:
            - text: struct
              type: word
            - text: structure
              type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_state_implements
            type: identifier
          arguments:
            type: argument_list
            children: []
  - text: '## for annotating function parameters'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: is
          type: word
        - text: implemented
          type: word
        - text: trait
          type: word
        - type: list
          list_name:
            text: user.code_trait
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_insert_trait_annotation
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: variable
              variable_name:
                text: code_trait
                type: identifier
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: is
          type: word
        - text: implemented
          type: word
        - text: trait
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: ': impl '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: returns
          type: word
        - text: implemented
          type: word
        - text: trait
          type: word
        - type: list
          list_name:
            text: user.code_trait
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_insert_return_trait
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: variable
              variable_name:
                text: code_trait
                type: identifier
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: returns
          type: word
        - text: implemented
          type: word
        - text: trait
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: ' -> impl '
            type: string_content
  - text: '## for generic reference of traits'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: trait
          type: word
        - type: list
          list_name:
            text: user.code_trait
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: implemented
          type: word
        - text: trait
          type: word
        - type: list
          list_name:
            text: user.code_trait
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: 'impl '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: dynamic
          type: word
        - text: trait
          type: word
        - type: list
          list_name:
            text: user.code_trait
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: 'dyn '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
  - text: '## for generic reference of macro'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: macro
          type: word
        - type: list
          list_name:
            text: user.code_macros
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_insert_macro
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: variable
              variable_name:
                text: code_macros
                type: identifier
            - type: string
              children: []
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: macro
          type: word
        - text: wrap
          type: word
        - type: list
          list_name:
            text: user.code_macros
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_insert_macro
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: variable
              variable_name:
                text: code_macros
                type: identifier
            - type: action
              action_name:
                text: edit.selected_text
                type: identifier
              arguments:
                type: argument_list
                children: []
  - text: '## rust specific document comments'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: block
          type: word
        - text: dock
          type: word
        - text: comment
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_comment_documentation_block
            type: identifier
          arguments:
            type: argument_list
            children: []
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: inner
          type: word
        - text: dock
          type: word
        - text: comment
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_comment_documentation_inner
            type: identifier
          arguments:
            type: argument_list
            children: []
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: inner
          type: word
        - text: block
          type: word
        - text: dock
          type: word
        - text: comment
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_comment_documentation_block_inner
            type: identifier
          arguments:
            type: argument_list
            children: []
