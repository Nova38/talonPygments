input: "tag: user.php\n-\ntag(): user.code_imperative\ntag(): user.code_object_oriented\n\
  tag(): user.code_libraries\n\ntag(): user.code_comment_line\ntag(): user.code_comment_block\n\
  tag(): user.code_comment_documentation\ntag(): user.code_data_bool\ntag(): user.code_data_null\n\
  tag(): user.code_operators_assignment\ntag(): user.code_operators_math\ntag(): user.code_functions\n\
  \nsettings():\n    user.code_private_function_formatter = \"PRIVATE_CAMEL_CASE\"\
  \n    user.code_protected_function_formatter = \"PRIVATE_CAMEL_CASE\"\n    user.code_public_function_formatter\
  \ = \"PRIVATE_CAMEL_CASE\"\n    user.code_private_variable_formatter = \"PRIVATE_CAMEL_CASE\"\
  \n    user.code_protected_variable_formatter = \"PRIVATE_CAMEL_CASE\"\n    user.code_public_variable_formatter\
  \ = \"PRIVATE_CAMEL_CASE\"\n\n(op | is) loosely equal: \" == \"\n(op | is) loosely\
  \ not equal: \" != \"\n\nstate try: \"try {\\n\"\nstate catch: \"catch (\\\\Throwable\
  \ $exception) {\\n\"\n\nvar <phrase> [over]:\n    insert(\"$\")\n    insert(user.formatted_text(phrase,\
  \ \"PRIVATE_CAMEL_CASE\"))\n"
output:
  type: source_file
  children:
  - type: context
    children:
    - type: match
      key:
        text: tag
        type: identifier
      pattern:
        text: ' user.php'
        type: implicit_string
  - type: include_tag
    tag:
      text: user.code_imperative
      type: identifier
  - type: include_tag
    tag:
      text: user.code_object_oriented
      type: identifier
  - type: include_tag
    tag:
      text: user.code_libraries
      type: identifier
  - type: include_tag
    tag:
      text: user.code_comment_line
      type: identifier
  - type: include_tag
    tag:
      text: user.code_comment_block
      type: identifier
  - type: include_tag
    tag:
      text: user.code_comment_documentation
      type: identifier
  - type: include_tag
    tag:
      text: user.code_data_bool
      type: identifier
  - type: include_tag
    tag:
      text: user.code_data_null
      type: identifier
  - type: include_tag
    tag:
      text: user.code_operators_assignment
      type: identifier
  - type: include_tag
    tag:
      text: user.code_operators_math
      type: identifier
  - type: include_tag
    tag:
      text: user.code_functions
      type: identifier
  - type: settings
    children:
    - type: block
      children:
      - type: assignment
        left:
          text: user.code_private_function_formatter
          type: identifier
        right:
          type: string
          children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
      - type: assignment
        left:
          text: user.code_protected_function_formatter
          type: identifier
        right:
          type: string
          children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
      - type: assignment
        left:
          text: user.code_public_function_formatter
          type: identifier
        right:
          type: string
          children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
      - type: assignment
        left:
          text: user.code_private_variable_formatter
          type: identifier
        right:
          type: string
          children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
      - type: assignment
        left:
          text: user.code_protected_variable_formatter
          type: identifier
        right:
          type: string
          children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
      - type: assignment
        left:
          text: user.code_public_variable_formatter
          type: identifier
        right:
          type: string
          children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - type: parenthesized_rule
          children:
          - type: choice
            children:
            - text: op
              type: word
            - text: is
              type: word
        - text: loosely
          type: word
        - text: equal
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: ' == '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - type: parenthesized_rule
          children:
          - type: choice
            children:
            - text: op
              type: word
            - text: is
              type: word
        - text: loosely
          type: word
        - text: not
          type: word
        - text: equal
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: ' != '
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - text: try
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: 'try '
            type: string_content
          - text: '{'
            type: string_content
          - text: \n
            type: string_escape_sequence
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: state
          type: word
        - text: catch
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: catch (
            type: string_content
          - text: \\
            type: string_escape_sequence
          - text: 'Throwable $exception) '
            type: string_content
          - text: '{'
            type: string_content
          - text: \n
            type: string_escape_sequence
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: var
          type: word
        - type: capture
          capture_name:
            text: phrase
            type: identifier
        - type: optional
          children:
          - text: over
            type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: $
                type: string_content
      - type: expression
        expression:
          type: action
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: action
              action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                type: argument_list
                children:
                - type: variable
                  variable_name:
                    text: phrase
                    type: identifier
                - type: string
                  children:
                  - text: PRIVATE_CAMEL_CASE
                    type: string_content
