input: "# NOTE: to use these commands you will need to activate the tag below in whatever\
  \ contexts you\n# choose.\n#\n# do this in a separate .talon file or via python.\
  \ for example, if you use windows terminal for\n# wsl then you might do this:\n\
  #\n#    os: windows\n#    app: windows_terminal\n#    -\n#    tag(): user.wsl\n\
  #\n# however, if you also use windows terminal for other things (powershell), you\
  \ will want something\n# more specific...like this:\n#\n#    os: windows\n#    app:\
  \ windows_terminal\n#    title: /^WSL:/\n#    -\n#    tag(): user.wsl\n#\n# then,\
  \ you will need to find a way to set the window title accordingly. for example,\
  \ to match\n# the title pattern above, you can set the prompt in your .bashrc file\
  \ like this:\n#\n#    PS1=\"\\[\\e]0;${debian_chroot:+($debian_chroot)}WSL:${WSL_DISTRO_NAME}\
  \ \\u@\\h: \\w\\a\\]$PS1\"\n#\n# ALSO: if you do populate your window title with\
  \ your distro name, make sure the 'wsl_title_regex'\n# value in wsl.py is set accordingly.\n\
  tag: user.wsl\n-\n\ntag(): terminal\ntag(): user.file_manager\ntag(): user.generic_unix_shell\n\
  tag(): user.git\ntag(): user.kubectl\n\n^go <user.letter>$: user.file_manager_open_volume(\"\
  /mnt/{letter}\")\n\n(wsl|weasel) reset path detection: user.wsl_reset_path_detection()\n\
  (wsl|weasel) speak: user.wsl_speak()\n"
output: |
  # NOTE: to use these commands you will need to activate the tag below in whatever contexts you
  # choose.
  # 
  # do this in a separate .talon file or via python. for example, if you use windows terminal for
  # wsl then you might do this:
  # 
  # os: windows
  # app: windows_terminal
  # -
  # tag(): user.wsl
  # 
  # however, if you also use windows terminal for other things (powershell), you will want something
  # more specific...like this:
  # 
  # os: windows
  # app: windows_terminal
  # title: /^WSL:/
  # -
  # tag(): user.wsl
  # 
  # then, you will need to find a way to set the window title accordingly. for example, to match
  # the title pattern above, you can set the prompt in your .bashrc file like this:
  # 
  # PS1="\[\e]0;${debian_chroot:+($debian_chroot)}WSL:${WSL_DISTRO_NAME} \u@\h: \w\a\]$PS1"
  # 
  # ALSO: if you do populate your window title with your distro name, make sure the 'wsl_title_regex'
  # value in wsl.py is set accordingly.
  tag: user.wsl
  -
  tag(): terminal
  tag(): user.file_manager
  tag(): user.generic_unix_shell
  tag(): user.git
  tag(): user.kubectl
  ^ go <user.letter> $:
      user.file_manager_open_volume("/mnt/{letter}")

  (wsl | weasel) reset path detection:
      user.wsl_reset_path_detection()

  (wsl | weasel) speak:
      user.wsl_speak()
