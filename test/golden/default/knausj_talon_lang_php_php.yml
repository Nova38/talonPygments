input: "tag: user.php\n-\ntag(): user.code_imperative\ntag(): user.code_object_oriented\n\
  tag(): user.code_libraries\n\ntag(): user.code_comment_line\ntag(): user.code_comment_block\n\
  tag(): user.code_comment_documentation\ntag(): user.code_data_bool\ntag(): user.code_data_null\n\
  tag(): user.code_operators_assignment\ntag(): user.code_operators_math\ntag(): user.code_functions\n\
  \nsettings():\n    user.code_private_function_formatter = \"PRIVATE_CAMEL_CASE\"\
  \n    user.code_protected_function_formatter = \"PRIVATE_CAMEL_CASE\"\n    user.code_public_function_formatter\
  \ = \"PRIVATE_CAMEL_CASE\"\n    user.code_private_variable_formatter = \"PRIVATE_CAMEL_CASE\"\
  \n    user.code_protected_variable_formatter = \"PRIVATE_CAMEL_CASE\"\n    user.code_public_variable_formatter\
  \ = \"PRIVATE_CAMEL_CASE\"\n\n(op | is) loosely equal: \" == \"\n(op | is) loosely\
  \ not equal: \" != \"\n\nstate try: \"try {\\n\"\nstate catch: \"catch (\\\\Throwable\
  \ $exception) {\\n\"\n\nvar <phrase> [over]:\n    insert(\"$\")\n    insert(user.formatted_text(phrase,\
  \ \"PRIVATE_CAMEL_CASE\"))\n"
output: |2-
   tag: user.php
  -

  tag(): user.code_imperative
  tag(): user.code_object_oriented
  tag(): user.code_libraries
  tag(): user.code_comment_line
  tag(): user.code_comment_block
  tag(): user.code_comment_documentation
  tag(): user.code_data_bool
  tag(): user.code_data_null
  tag(): user.code_operators_assignment
  tag(): user.code_operators_math
  tag(): user.code_functions
  settings():
      user.code_private_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_protected_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_public_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_private_variable_formatter = "PRIVATE_CAMEL_CASE"
      user.code_protected_variable_formatter = "PRIVATE_CAMEL_CASE"
      user.code_public_variable_formatter = "PRIVATE_CAMEL_CASE"
  (op | is) loosely equal:
      "=="
  (op | is) loosely not equal:
      "!="
  state try:
      "try{\n"
  state catch:
      "catch (\\Throwable $exception){\n"
  var <phrase> [over]:
      insert("$")
      insert(user.formatted_text(phrase, "PRIVATE_CAMEL_CASE"))
