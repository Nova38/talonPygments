input: "tag: user.code_operators_math\n-\n\n# math operators\nop (minus | subtract):\
  \ user.code_operator_subtraction()\nop (plus | add): user.code_operator_addition()\n\
  op (times | multiply): user.code_operator_multiplication()\nop divide: user.code_operator_division()\n\
  op mod: user.code_operator_modulo()\n(op (power | exponent) | to the power [of]):\
  \ user.code_operator_exponent()\n\n# comparison operators\n(op | is) equal: user.code_operator_equal()\n\
  (op | is) not equal: user.code_operator_not_equal()\n(op | is) (greater | more):\
  \ user.code_operator_greater_than()\n(op | is) (less | below) [than]: user.code_operator_less_than()\n\
  (op | is) greater [than] or equal: user.code_operator_greater_than_or_equal_to()\n\
  (op | is) less [than] or equal: user.code_operator_less_than_or_equal_to()\n\n#\
  \ logical operators\n(op | logical) and: user.code_operator_and()\n(op | logical)\
  \ or: user.code_operator_or()\n\n# set operators\n(op | is) in: user.code_operator_in()\n\
  (op | is) not in: user.code_operator_not_in()\n\n# TODO: This operator should either\
  \ be abstracted into a function or removed.\n(op | pad) colon: \" : \"\n"
output: |
  tag: user.code_operators_math
  -
  # math operators
  op (minus | subtract):
      user.code_operator_subtraction()

  op (plus | add):
      user.code_operator_addition()

  op (times | multiply):
      user.code_operator_multiplication()

  op divide:
      user.code_operator_division()

  op mod:
      user.code_operator_modulo()

  (op (power | exponent) | to the power [of]):
      user.code_operator_exponent()

  # comparison operators
  (op | is) equal:
      user.code_operator_equal()

  (op | is) not equal:
      user.code_operator_not_equal()

  (op | is) (greater | more):
      user.code_operator_greater_than()

  (op | is) (less | below) [than]:
      user.code_operator_less_than()

  (op | is) greater [than] or equal:
      user.code_operator_greater_than_or_equal_to()

  (op | is) less [than] or equal:
      user.code_operator_less_than_or_equal_to()

  # logical operators
  (op | logical) and:
      user.code_operator_and()

  (op | logical) or:
      user.code_operator_or()

  # set operators
  (op | is) in:
      user.code_operator_in()

  (op | is) not in:
      user.code_operator_not_in()

  # TODO: This operator should either be abstracted into a function or removed.
  (op | pad) colon:
      ":"
