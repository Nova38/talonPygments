input: "tag: user.javascript\n-\ntag(): user.code_imperative\ntag(): user.code_object_oriented\n\
  \ntag(): user.code_comment_line\ntag(): user.code_comment_block_c_like\ntag(): user.code_data_bool\n\
  tag(): user.code_data_null\ntag(): user.code_functions\ntag(): user.code_functions_common\n\
  tag(): user.code_keywords\ntag(): user.code_libraries\ntag(): user.code_operators_array\n\
  tag(): user.code_operators_assignment\ntag(): user.code_operators_bitwise\ntag():\
  \ user.code_operators_lambda\ntag(): user.code_operators_math\n\nsettings():\n \
  \   user.code_private_function_formatter = \"PRIVATE_CAMEL_CASE\"\n    user.code_protected_function_formatter\
  \ = \"PRIVATE_CAMEL_CASE\"\n    user.code_public_function_formatter = \"PRIVATE_CAMEL_CASE\"\
  \n    user.code_private_variable_formatter = \"PRIVATE_CAMEL_CASE\"\n    user.code_protected_variable_formatter\
  \ = \"PRIVATE_CAMEL_CASE\"\n    user.code_public_variable_formatter = \"PRIVATE_CAMEL_CASE\"\
  \n\n(op | is) strict equal: \" === \"\n(op | is) strict not equal: \" !== \"\nop\
  \ null else: \" ?? \"\n\nstate const: \"const \"\n\nstate let: \"let \"\n\nstate\
  \ var: \"var \"\n\nstate export: \"export \"\n\nstate async: \"async \"\n\nstate\
  \ await: \"await \"\n\ndot {user.code_common_member_function}:\n    user.insert_between(\"\
  .{code_common_member_function}(\", \")\")\n\nstate map: app.notify('ERROR: Command\
  \ deprecated; please use \"dot map\"')\nstate filter: app.notify('ERROR: Command\
  \ deprecated; please use \"dot filter\"')\nstate reduce: app.notify('ERROR: Command\
  \ deprecated; please use \"dot reduce\"')\n\nstate spread: \"...\"\n\nfrom import:\n\
  \    user.insert_between(' from  \"', '\"')\n"
output: |2-
   tag: user.javascript
  -

  tag(): user.code_imperative
  tag(): user.code_object_oriented
  tag(): user.code_comment_line
  tag(): user.code_comment_block_c_like
  tag(): user.code_data_bool
  tag(): user.code_data_null
  tag(): user.code_functions
  tag(): user.code_functions_common
  tag(): user.code_keywords
  tag(): user.code_libraries
  tag(): user.code_operators_array
  tag(): user.code_operators_assignment
  tag(): user.code_operators_bitwise
  tag(): user.code_operators_lambda
  tag(): user.code_operators_math
  settings():
      user.code_private_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_protected_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_public_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_private_variable_formatter = "PRIVATE_CAMEL_CASE"
      user.code_protected_variable_formatter = "PRIVATE_CAMEL_CASE"
      user.code_public_variable_formatter = "PRIVATE_CAMEL_CASE"
  (op | is) strict equal:
      "==="
  (op | is) strict not equal:
      "!=="
  op null else:
      "??"
  state const:
      "const"
  state let:
      "let"
  state var:
      "var"
  state export:
      "export"
  state async:
      "async"
  state await:
      "await"
  dot {user.code_common_member_function}:
      user.insert_between(".{code_common_member_function}(", ")")
  state map:
      app.notify("ERROR: Command deprecated; please use "dot map"")
  state filter:
      app.notify("ERROR: Command deprecated; please use "dot filter"")
  state reduce:
      app.notify("ERROR: Command deprecated; please use "dot reduce"")
  state spread:
      "..."
  from import:
      user.insert_between("from "", """)
