input: "tag: user.ruby\n-\ntag(): user.code_imperative\ntag(): user.code_object_oriented\n\
  \ntag(): user.code_comment_line\ntag(): user.code_comment_documentation\ntag():\
  \ user.code_data_bool\ntag(): user.code_data_null\ntag(): user.code_functions\n\
  tag(): user.code_libraries\ntag(): user.code_operators_array\ntag(): user.code_operators_assignment\n\
  tag(): user.code_operators_bitwise\ntag(): user.code_operators_lambda\ntag(): user.code_operators_math\n\
  \nsettings():\n    user.code_private_function_formatter = \"SNAKE_CASE\"\n    user.code_protected_function_formatter\
  \ = \"SNAKE_CASE\"\n    user.code_public_function_formatter = \"SNAKE_CASE\"\n \
  \   user.code_private_variable_formatter = \"SNAKE_CASE\"\n    user.code_protected_variable_formatter\
  \ = \"SNAKE_CASE\"\n    user.code_public_variable_formatter = \"SNAKE_CASE\"\n\n\
  args pipe: user.insert_between(\"|\", \"|\")\n\n# NOTE: this command is created\
  \ for backward compatibility, but the documentation comments are not actually strings\
  \ in Ruby.\ndock string:\n    user.code_comment_documentation()\n\nstate end: \"\
  end\"\nstate begin: \"begin\"\nstate rescue: \"rescue \"\nstate module: \"module\
  \ \"\n\n^instance <user.text>$:\n    insert(\"@\")\n    user.code_public_variable_formatter(text)\n"
output: |
  tag: user.ruby

  -
  tag(): user.code_imperative
  tag(): user.code_object_oriented
  tag(): user.code_comment_line
  tag(): user.code_comment_documentation
  tag(): user.code_data_bool
  tag(): user.code_data_null
  tag(): user.code_functions
  tag(): user.code_libraries
  tag(): user.code_operators_array
  tag(): user.code_operators_assignment
  tag(): user.code_operators_bitwise
  tag(): user.code_operators_lambda
  tag(): user.code_operators_math
  settings():
      user.code_private_function_formatter = "SNAKE_CASE"
      user.code_protected_function_formatter = "SNAKE_CASE"
      user.code_public_function_formatter = "SNAKE_CASE"
      user.code_private_variable_formatter = "SNAKE_CASE"
      user.code_protected_variable_formatter = "SNAKE_CASE"
      user.code_public_variable_formatter = "SNAKE_CASE"
  args pipe:                       user.insert_between("|", "|")

  # NOTE: this command is created for backward compatibility, but the documentation comments are not actually strings in Ruby.
  dock string:                     user.code_comment_documentation()
  state end:                       "end"
  state begin:                     "begin"
  state rescue:                    "rescue"
  state module:                    "module"

  ^ instance <user.text> $:
      insert("@")
      user.code_public_variable_formatter(text)
