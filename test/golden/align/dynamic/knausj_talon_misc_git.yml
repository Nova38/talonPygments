input: "tag: terminal\nand tag: user.git\n-\n# Standard commands\ngit add patch: \"\
  git add . -p\\n\"\ngit add: \"git add \"\ngit add everything: \"git add -u\\n\"\n\
  git bisect: \"git bisect \"\ngit blame: \"git blame \"\ngit branch: \"git branch\
  \ \"\ngit branch list: \"git branch -vv\\n\"\ngit remote branches: \"git branch\
  \ --remote\\n\"\ngit branch <user.text>: \"git branch {text}\"\ngit checkout: \"\
  git checkout \"\ngit checkout master: \"git checkout master\\n\"\ngit checkout main:\
  \ \"git checkout main\\n\"\ngit checkout <user.text>: \"git checkout {text}\"\n\
  git cherry pick: \"git cherry-pick \"\ngit cherry pick continue: \"git cherry-pick\
  \ --continue \"\ngit cherry pick abort: \"git cherry-pick --abort \"\ngit cherry\
  \ pick skip: \"git cherry-pick --skip \"\ngit clone: \"git clone \"\n# Leave \\\
  n out for confirmation since the operation is destructive\ngit clean everything:\
  \ \"git clean -dfx\"\ngit commit message <user.text>: \"git commit -m '{text}'\"\
  \ngit commit: \"git commit\\n\"\ngit commit amend: \"git commit --amend\\n\"\ngit\
  \ commit no verify: \"git commit -n\"\ngit commit existing: \"git commit -a\\n\"\
  \ngit diff (colour|color) words: \"git diff --color-words \"\ngit diff: \"git diff\
  \ \"\ngit diff cached: \"git diff --cached\\n\"\ngit diff tool: \"git difftool -d\\\
  n\"\ngit diff tool cached: \"git difftool --cached -d\\n\"\ngit fetch: \"git fetch\\\
  n\"\ngit fetch all: \"git fetch --all\\n\"\ngit fetch <user.text>: \"git fetch {text}\"\
  \ngit fetch prune: \"git fetch --prune\\n\"\ngit in it: \"git init\\n\"\ngit log\
  \ all: \"git log\\n\"\ngit log all changes: \"git log -c\\n\"\ngit log: \"git log\
  \ \"\ngit log changes: \"git log -c \"\ngit merge: \"git merge \"\ngit merge <user.text>:\"\
  git merge {text}\"\ngit merge tool: \"git mergetool\\n\"\ngit move: \"git mv \"\n\
  git pull: \"git pull\\n\"\ngit pull origin: \"git pull origin \"\ngit pull rebase:\
  \ \"git pull --rebase\\n\"\ngit pull fast forward: \"git pull --ff-only\\n\"\ngit\
  \ pull <user.text>: \"git pull {text} \"\ngit push: \"git push\\n\"\ngit push origin:\
  \ \"git push origin \"\ngit push up stream origin: \"git push -u origin\"\ngit push\
  \ <user.text>: \"git push {text} \"\ngit push tags: \"git push --tags\\n\"\ngit\
  \ rebase: \"git rebase \"\ngit rebase continue: \"git rebase --continue\"\ngit rebase\
  \ skip: \"git rebase --skip\"\ngit remove: \"git rm \"\ngit (remove|delete) branch:\
  \ \"git branch -d \"\ngit (remove|delete) remote branch: \"git push --delete origin\
  \ \"\ngit reset: \"git reset \"\ngit reset soft: \"git reset --soft \"\ngit reset\
  \ hard: \"git reset --hard \"\ngit restore: \"git restore \"\ngit restore staged:\
  \ \"git restore --staged \"\ngit restore source: \"git restore --source=\"\ngit\
  \ remote: \"git remote \"\ngit remote add: \"git remote add \"\ngit remote list:\
  \ \"git remote -v\\n\"\ngit remote set url: \"git remote set-url \"\ngit remote\
  \ add upstream: \"git remote add upstream \"\ngit remote remove: \"git remote remove\
  \ \"\ngit remote show origin: \"git remote show origin\\n\"\ngit show: \"git show\
  \ \"\ngit stash pop: \"git stash pop\\n\"\ngit stash: \"git stash\\n\"\ngit stash\
  \ push: user.insert_between(\"git stash push -m '\", \"'\")\ngit stash apply: \"\
  git stash apply\\n\"\ngit stash list: \"git stash list\\n\"\ngit stash show: \"\
  git stash show\"\ngit status: \"git status\\n\"\ngit switch [<user.text>]: \"git\
  \ switch {user.formatted_text(text or '', 'DASH_SEPARATED')}\"\ngit switch master:\
  \ \"git switch master \"\ngit switch main: \"git switch main \"\ngit switch detached:\
  \ \"git switch --detach \"\ngit (switch create | new branch) [<user.text>]:\n  \"\
  git switch -c {user.formatted_text(text or '', 'DASH_SEPARATED')}\"\ngit switch\
  \ orphan: \"git switch --orphan \"\ngit submodule add:  \"git submodule add \"\n\
  git tag: \"git tag \"\n\n# Convenience\ngit edit config: \"git config --local -e\\\
  n\"\n\ngit clone clipboard:\n  insert(\"git clone \")\n  edit.paste()\n  key(enter)\n\
  git diff highlighted:\n    edit.copy()\n    insert(\"git diff \")\n    edit.paste()\n\
  \    key(enter)\ngit diff clipboard:\n    insert(\"git diff \")\n    edit.paste()\n\
  \    key(enter)\ngit add highlighted:\n    edit.copy()\n    insert(\"git add \"\
  )\n    edit.paste()\n    key(enter)\ngit add clipboard:\n    insert(\"git add \"\
  )\n    edit.paste()\n    key(enter)\ngit commit highlighted:\n    edit.copy()\n\
  \    insert(\"git add \")\n    edit.paste()\n    insert(\"\\ngit commit\\n\")\n"
output: |
  tag: terminal

  and tag: user.git

  -
  # Standard commands
  git add patch:            "git add . -p\n"
  git add:                  "git add"
  git add everything:       "git add -u\n"
  git bisect:               "git bisect"
  git blame:                "git blame"
  git branch:               "git branch"
  git branch list:          "git branch -vv\n"
  git remote branches:      "git branch --remote\n"
  git branch <user.text>:   "git branch{text}"
  git checkout:             "git checkout"
  git checkout master:      "git checkout master\n"
  git checkout main:        "git checkout main\n"
  git checkout <user.text>: "git checkout{text}"
  git cherry pick:          "git cherry-pick"
  git cherry pick continue: "git cherry-pick --continue"
  git cherry pick abort:    "git cherry-pick --abort"
  git cherry pick skip:     "git cherry-pick --skip"
  git clone:                "git clone"

  # Leave \n out for confirmation since the operation is destructive
  git clean everything:
      "git clean -dfx"

  git commit message <user.text>:
      "git commit -m '{text}'"

  git commit:
      "git commit\n"

  git commit amend:
      "git commit --amend\n"

  git commit no verify:
      "git commit -n"

  git commit existing:
      "git commit -a\n"

  git diff (colour | color) words:
      "git diff --color-words"

  git diff:
      "git diff"

  git diff cached:
      "git diff --cached\n"

  git diff tool:
      "git difftool -d\n"

  git diff tool cached:
      "git difftool --cached -d\n"

  git fetch:
      "git fetch\n"

  git fetch all:
      "git fetch --all\n"

  git fetch <user.text>:
      "git fetch{text}"

  git fetch prune:
      "git fetch --prune\n"

  git in it:
      "git init\n"

  git log all:
      "git log\n"

  git log all changes:
      "git log -c\n"

  git log:
      "git log"

  git log changes:
      "git log -c"

  git merge:
      "git merge"

  git merge <user.text>:
      "git merge{text}"

  git merge tool:
      "git mergetool\n"

  git move:
      "git mv"

  git pull:
      "git pull\n"

  git pull origin:
      "git pull origin"

  git pull rebase:
      "git pull --rebase\n"

  git pull fast forward:
      "git pull --ff-only\n"

  git pull <user.text>:
      "git pull{text}"

  git push:
      "git push\n"

  git push origin:
      "git push origin"

  git push up stream origin:
      "git push -u origin"

  git push <user.text>:
      "git push{text}"

  git push tags:
      "git push --tags\n"

  git rebase:
      "git rebase"

  git rebase continue:
      "git rebase --continue"

  git rebase skip:
      "git rebase --skip"

  git remove:
      "git rm"

  git (remove | delete) branch:
      "git branch -d"

  git (remove | delete) remote branch:
      "git push --delete origin"

  git reset:
      "git reset"

  git reset soft:
      "git reset --soft"

  git reset hard:
      "git reset --hard"

  git restore:
      "git restore"

  git restore staged:
      "git restore --staged"

  git restore source:
      "git restore --source="

  git remote:
      "git remote"

  git remote add:
      "git remote add"

  git remote list:
      "git remote -v\n"

  git remote set url:
      "git remote set-url"

  git remote add upstream:
      "git remote add upstream"

  git remote remove:
      "git remote remove"

  git remote show origin:
      "git remote show origin\n"

  git show:
      "git show"

  git stash pop:
      "git stash pop\n"

  git stash:
      "git stash\n"

  git stash push:
      user.insert_between("git stash push -m '", "'")

  git stash apply:
      "git stash apply\n"

  git stash list:
      "git stash list\n"

  git stash show:
      "git stash show"

  git status:
      "git status\n"

  git switch [<user.text>]:
      "git switch{user.formatted_text(text or '', 'DASH_SEPARATED')}"

  git switch master:
      "git switch master"

  git switch main:
      "git switch main"

  git switch detached:
      "git switch --detach"

  git (switch create | new branch) [<user.text>]:
      "git switch -c{user.formatted_text(text or '', 'DASH_SEPARATED')}"

  git switch orphan:
      "git switch --orphan"

  git submodule add:
      "git submodule add"

  git tag:
      "git tag"

  # Convenience
  git edit config: "git config --local -e\n"

  git clone clipboard:
      insert("git clone")
      edit.paste()
      key(enter)

  git diff highlighted:
      edit.copy()
      insert("git diff")
      edit.paste()
      key(enter)

  git diff clipboard:
      insert("git diff")
      edit.paste()
      key(enter)

  git add highlighted:
      edit.copy()
      insert("git add")
      edit.paste()
      key(enter)

  git add clipboard:
      insert("git add")
      edit.paste()
      key(enter)

  git commit highlighted:
      edit.copy()
      insert("git add")
      edit.paste()
      insert("\ngit commit\n")
