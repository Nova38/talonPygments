input: "tag: user.code_operators_lambda\n-\n\n# In many languages, anonymous functions\
  \ aren't merely infix syntax:\n#\n#       Haskell  '\\x -> bla'\n#       OCaml \
  \   'fun x -> bla'\n#       Rust     '|x| { bla }'\n#\n# Therefore a revision of\
  \ this command may be in order.\n\n# syntax for anonymous functions\nop lambda:\
  \ user.code_operator_lambda()\n"
output:
  type: source_file
  children:
  - type: context
    children:
    - type: match
      key:
        text: tag
        type: identifier
      pattern:
        text: ' user.code_operators_lambda'
        type: implicit_string
  - text: "# In many languages, anonymous functions aren't merely infix syntax:"
    type: comment
  - text: '#'
    type: comment
  - text: "#       Haskell  '\\x -> bla'"
    type: comment
  - text: "#       OCaml    'fun x -> bla'"
    type: comment
  - text: "#       Rust     '|x| { bla }'"
    type: comment
  - text: '#'
    type: comment
  - text: '# Therefore a revision of this command may be in order.'
    type: comment
  - text: '# syntax for anonymous functions'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: op
          type: word
        - text: lambda
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_operator_lambda
            type: identifier
          arguments:
            type: argument_list
            children: []
