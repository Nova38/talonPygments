input: "tag: user.talon\n-\ntag(): user.code_operators_math\ntag(): user.code_operators_assignment\n\
  tag(): user.code_comment_line\ntag(): user.code_functions_common\n# uncomment user.talon_populate_lists\
  \ tag to activate talon-specific lists of actions, scopes, modes etcetera.\n# Do\
  \ not enable this tag with dragon, as it will be unusable.\n# with conformer, the\
  \ latency increase may also be unacceptable depending on your cpu\n# see https://github.com/knausj85/knausj_talon/issues/600\n\
  # tag(): user.talon_populate_lists\n\ndot talon: insert(\".talon\")\n#defintion\
  \ blocks for the context\naction block:\n    user.insert_between(\"action(\", \"\
  ):\")\nsetting block:\n    insert(\"settings():\\n\\t\")\nsetting {user.talon_settings}:\n\
  \    user.paste(\"{talon_settings} = \")\n#context requirements\nwin require:\n\
  \    insert(\"os: windows\\n\")\nmac require:\n    insert(\"os: mac\\n\")\nlinux\
  \ require:\n    insert(\"os: linux\\n\")\ntitle require:\n    insert(\"win.title:\
  \ \")\napplication [require] [{user.talon_apps}]:\n    app = talon_apps or \"\"\n\
  \    user.paste(\"app: {app}\")\nmode require [{user.talon_modes}]:\n    mode =\
  \ talon_modes or \"\"\n    user.paste(\"mode: {mode}\")\ntag require [{user.talon_tags}]:\n\
  \    tag = talon_tags or \"\"\n    user.paste(\"tag: {tag}\")\ntag set [{user.talon_tags}]:\n\
  \    tag = talon_tags or \"\"\n    user.paste(\"tag(): {tag}\")\n# requires user.talon_populate_lists\
  \ tag. do not use with dragon\nlist {user.talon_lists}: \"{{{talon_lists}}}\"\n\
  # requires user.talon_populate_lists tag. do not use with dragon\ncapture {user.talon_captures}:\
  \ \"<{talon_captures}>\"\n\n#commands for dictating key combos\nkey <user.keys>\
  \ over: \"{keys}\"\nkey <user.modifiers> over: \"{modifiers}\"\n\n# all actions\
  \ (requires uncommenting user.talon_populate_lists tag above)\nfunk {user.talon_actions}:\
  \ user.code_insert_function(talon_actions, edit.selected_text())\nfunk cell <number>:\n\
  \    user.code_select_function(number - 1, \"\")\nfunk wrap <user.code_common_function>:\n\
  \    user.code_insert_function(code_common_function, edit.selected_text())\nfunk\
  \ wrap <number>:\n    user.code_select_function(number - 1, edit.selected_text())\n"
output:
  type: source_file
  children:
  - type: context
    children:
    - type: match
      key:
        text: tag
        type: identifier
      pattern:
        text: ' user.talon'
        type: implicit_string
  - type: include_tag
    tag:
      text: user.code_operators_math
      type: identifier
  - type: include_tag
    tag:
      text: user.code_operators_assignment
      type: identifier
  - type: include_tag
    tag:
      text: user.code_comment_line
      type: identifier
  - type: include_tag
    tag:
      text: user.code_functions_common
      type: identifier
  - text: '# uncomment user.talon_populate_lists tag to activate talon-specific lists
      of actions, scopes, modes etcetera.'
    type: comment
  - text: '# Do not enable this tag with dragon, as it will be unusable.'
    type: comment
  - text: '# with conformer, the latency increase may also be unacceptable depending
      on your cpu'
    type: comment
  - text: '# see https://github.com/knausj85/knausj_talon/issues/600'
    type: comment
  - text: '# tag(): user.talon_populate_lists'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: dot
          type: word
        - text: talon
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: .talon
                type: string_content
  - text: '#defintion blocks for the context'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: action
          type: word
        - text: block
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.insert_between
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: action(
                type: string_content
            - type: string
              children:
              - text: '):'
                type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: setting
          type: word
        - text: block
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: 'settings():'
                type: string_content
              - text: \n
                type: string_escape_sequence
              - text: \t
                type: string_escape_sequence
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: setting
          type: word
        - type: list
          list_name:
            text: user.talon_settings
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.paste
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: '{'
                type: string_content
              - text: talon_settings
                type: string_content
              - text: '}'
                type: string_content
              - text: ' = '
                type: string_content
  - text: '#context requirements'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: win
          type: word
        - text: require
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: 'os: windows'
                type: string_content
              - text: \n
                type: string_escape_sequence
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: mac
          type: word
        - text: require
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: 'os: mac'
                type: string_content
              - text: \n
                type: string_escape_sequence
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: linux
          type: word
        - text: require
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: 'os: linux'
                type: string_content
              - text: \n
                type: string_escape_sequence
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: title
          type: word
        - text: require
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: 'win.title: '
                type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: application
          type: word
        - type: optional
          children:
          - text: require
            type: word
        - type: optional
          children:
          - type: list
            list_name:
              text: user.talon_apps
              type: identifier
    script:
      type: block
      children:
      - type: assignment
        left:
          text: app
          type: identifier
        right:
          type: binary_operator
          left:
            type: variable
            variable_name:
              text: talon_apps
              type: identifier
          operator:
            text: or
            type: operator
          right:
            type: string
            children: []
      - type: expression
        expression:
          type: action
          action_name:
            text: user.paste
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: 'app: '
                type: string_content
              - text: '{'
                type: string_content
              - text: app
                type: string_content
              - text: '}'
                type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: mode
          type: word
        - text: require
          type: word
        - type: optional
          children:
          - type: list
            list_name:
              text: user.talon_modes
              type: identifier
    script:
      type: block
      children:
      - type: assignment
        left:
          text: mode
          type: identifier
        right:
          type: binary_operator
          left:
            type: variable
            variable_name:
              text: talon_modes
              type: identifier
          operator:
            text: or
            type: operator
          right:
            type: string
            children: []
      - type: expression
        expression:
          type: action
          action_name:
            text: user.paste
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: 'mode: '
                type: string_content
              - text: '{'
                type: string_content
              - text: mode
                type: string_content
              - text: '}'
                type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: tag
          type: word
        - text: require
          type: word
        - type: optional
          children:
          - type: list
            list_name:
              text: user.talon_tags
              type: identifier
    script:
      type: block
      children:
      - type: assignment
        left:
          text: tag
          type: identifier
        right:
          type: binary_operator
          left:
            type: variable
            variable_name:
              text: talon_tags
              type: identifier
          operator:
            text: or
            type: operator
          right:
            type: string
            children: []
      - type: expression
        expression:
          type: action
          action_name:
            text: user.paste
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: 'tag: '
                type: string_content
              - text: '{'
                type: string_content
              - text: tag
                type: string_content
              - text: '}'
                type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: tag
          type: word
        - text: set
          type: word
        - type: optional
          children:
          - type: list
            list_name:
              text: user.talon_tags
              type: identifier
    script:
      type: block
      children:
      - type: assignment
        left:
          text: tag
          type: identifier
        right:
          type: binary_operator
          left:
            type: variable
            variable_name:
              text: talon_tags
              type: identifier
          operator:
            text: or
            type: operator
          right:
            type: string
            children: []
      - type: expression
        expression:
          type: action
          action_name:
            text: user.paste
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: string
              children:
              - text: 'tag(): '
                type: string_content
              - text: '{'
                type: string_content
              - text: tag
                type: string_content
              - text: '}'
                type: string_content
  - text: '# requires user.talon_populate_lists tag. do not use with dragon'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: list
          type: word
        - type: list
          list_name:
            text: user.talon_lists
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: '{{'
            type: string_content
          - text: '{'
            type: string_content
          - text: talon_lists
            type: string_content
          - text: '}}'
            type: string_content
          - text: '}'
            type: string_content
  - text: '# requires user.talon_populate_lists tag. do not use with dragon'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: capture
          type: word
        - type: list
          list_name:
            text: user.talon_captures
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: <
            type: string_content
          - text: '{'
            type: string_content
          - text: talon_captures
            type: string_content
          - text: '}'
            type: string_content
          - text: '>'
            type: string_content
  - text: '#commands for dictating key combos'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: key
          type: word
        - type: capture
          capture_name:
            text: user.keys
            type: identifier
        - text: over
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: '{'
            type: string_content
          - text: keys
            type: string_content
          - text: '}'
            type: string_content
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: key
          type: word
        - type: capture
          capture_name:
            text: user.modifiers
            type: identifier
        - text: over
          type: word
    script:
      type: block
      children:
      - type: expression
        expression:
          type: string
          children:
          - text: '{'
            type: string_content
          - text: modifiers
            type: string_content
          - text: '}'
            type: string_content
  - text: '# all actions (requires uncommenting user.talon_populate_lists tag above)'
    type: comment
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: funk
          type: word
        - type: list
          list_name:
            text: user.talon_actions
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_insert_function
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: variable
              variable_name:
                text: talon_actions
                type: identifier
            - type: action
              action_name:
                text: edit.selected_text
                type: identifier
              arguments:
                type: argument_list
                children: []
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: funk
          type: word
        - text: cell
          type: word
        - type: capture
          capture_name:
            text: number
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_select_function
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: binary_operator
              left:
                type: variable
                variable_name:
                  text: number
                  type: identifier
              operator:
                text: '-'
                type: operator
              right:
                text: '1'
                type: integer
            - type: string
              children: []
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: funk
          type: word
        - text: wrap
          type: word
        - type: capture
          capture_name:
            text: user.code_common_function
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_insert_function
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: variable
              variable_name:
                text: code_common_function
                type: identifier
            - type: action
              action_name:
                text: edit.selected_text
                type: identifier
              arguments:
                type: argument_list
                children: []
  - type: command
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: funk
          type: word
        - text: wrap
          type: word
        - type: capture
          capture_name:
            text: number
            type: identifier
    script:
      type: block
      children:
      - type: expression
        expression:
          type: action
          action_name:
            text: user.code_select_function
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: binary_operator
              left:
                type: variable
                variable_name:
                  text: number
                  type: identifier
              operator:
                text: '-'
                type: operator
              right:
                text: '1'
                type: integer
            - type: action
              action_name:
                text: edit.selected_text
                type: identifier
              arguments:
                type: argument_list
                children: []
